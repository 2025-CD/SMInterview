server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
#2. SpringBoot Environment Setting
spring:
  mvc:
    view:
      prefix: /views/
      suffix: .jsp
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/smdb?serverTimezone=Asia/Seoul
    #192.168.34.18
    username: root
    password: 100414
#Mybatis Setting
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${client-id}
            client-secret: ${client-secret}
            scope:
              - account_email
              - profile_nickname
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: client_secret_post

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
mybatis:
  type-aliases-package: sm.ac.app.dto
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
#4. Logging Setting
logging:
  level:
    root: info
    org.mybatis: debug               # MyBatis 내부 동작
    sm.ac.app.repository: debug      # Repository (Mapper) 로그
    sm.ac.app.controller: debug      # 컨트롤러 로그
    sm.ac.app.service: debug         # 서비스 로그
    jdbc.sqlonly: debug
    org.springframework.web.socket.messaging: debug
    org.springframework.messaging.simp: debug
    org.springframework.web.client.RestTemplate: debug
openai:
  api-key: ${openai.api-key}